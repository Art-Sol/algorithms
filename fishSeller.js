/**
 * Продавец рыбы
 * Вася решил заняться торговлей рыбой. С помощью методов машинного обучения он
 * предсказал цены на рыбу на N дней вперёд. Он решил, что в один день он купит рыбу,
 * а в один из следующих дней — продаст (то есть совершит или ровно одну покупку и продажу
 * или вообще не совершит покупок и продаж, если это не принесёт ему прибыли).
 * К сожалению, рыба — товар скоропортящийся и разница между номером дня продажи и номером дня
 * покупки не должна превышать K.
 *
 * Определите, какую максимальную прибыль получит Вася.
 *
 * Формат ввода:
 * В первой строке входных данных задаются числа N и K (1 ≤ N ≤ 10000, 1 ≤ K ≤ 100).
 * Во второй строке задаются цены на рыбу в каждый из N дней. Цена — целое число, которое
 * может находится в пределах от 1 до 109.
 *
 * Формат вывода:
 * Выведите одно число — максимальную прибыль, которую получит Вася.
 *
 * Пример 1
 * Ввод
 * N = 5 K = 2 prices = [1, 2, 3, 4, 5]
 * Вывод 2
 *
 * Пример 2
 * Ввод
 * N = 5 K = 2 prices = [5, 4, 3, 2, 1]
 * Вывод 0
 */

const prices1 = [1, 2, 3, 4, 5];
const prices2 = [5, 4, 3, 2, 1];
const prices3 = [2, 4, 1, 3, 5, 7, 3, 9];

const fishSeller = (n, k, prices) => {
  let profit = 0;

  if (!n || !prices.length) {
    return profit;
  }

  // for (let i = 0; i < n - 1; i++) {
  //   const maxPrice = Math.max(...prices.slice(i + 1, Math.min(i + k + 1, n)));
  //   const newProfit = maxPrice - prices[i];

  //   if (newProfit > profit) {
  //     profit = newProfit;
  //   }
  // }

  prices.push(0); // барьерный элемент

  for (let i = 0; i < n; i++) {
    const maxPrice = Math.max(...prices.slice(i + 1, i + k + 1)); // +1 так как slice берет последний не включ.
    const newProfit = maxPrice - prices[i];

    if (newProfit > profit) {
      profit = newProfit;
    }
  }

  return profit;
};

console.log(fishSeller(5, 2, prices1)); // 2
console.log(fishSeller(5, 2, prices2)); // 0
console.log(fishSeller(8, 5, prices3)); // 8
